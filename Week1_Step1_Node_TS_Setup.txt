Week 1 – Step 1: Node.js + TypeScript Environment Setup

🎯 Objective
Establish a clean local environment for building production-grade TypeScript / Node.js AI services — the foundation for your future AI Integration Engineer projects.

───────────────────────────────
🪜 Step-by-Step Summary

1️⃣ Install Node.js (LTS)
1. Download the Windows Installer (.msi) for Node.js v22.21.0 (LTS) from https://nodejs.org/en/download
2. Accept all default installation options.
3. Verify installation:
   node -v
   npm -v
   ✅ Both commands should return version numbers.

───────────────────────────────
2️⃣ Create Project Folder
mkdir ai-chat-api
cd ai-chat-api
npm init -y
Creates a package.json for dependency management.

───────────────────────────────
3️⃣ Install TypeScript and Development Tools
npm install -D typescript ts-node nodemon @types/node

Package Overview:
- typescript → Compiler for TypeScript → JavaScript
- ts-node → Run TypeScript files directly
- nodemon → Auto-reload server on changes
- @types/node → Type definitions for Node APIs

───────────────────────────────
4️⃣ Initialize TypeScript Configuration
npx tsc --init
Update tsconfig.json to production-ready settings:

{
  "compilerOptions": {
    "target": "es2020",
    "module": "commonjs",
    "rootDir": "src",
    "outDir": "dist",
    "strict": true,
    "esModuleInterop": true
  }
}

───────────────────────────────
5️⃣ Create Source Folder and Test File
mkdir src
echo console.log("Hello AI Integration Engineer!"); > src/index.ts

Run:
npx ts-node src/index.ts
✅ Output: Hello AI Integration Engineer!

Tip: Run commands from the project root (where tsconfig.json lives) to avoid path errors.

───────────────────────────────
6️⃣ Add Development Scripts
Edit package.json:

"scripts": {
  "dev": "nodemon src/index.ts",
  "build": "tsc",
  "start": "node dist/index.js"
}

Run your project:
npm run dev

───────────────────────────────
✅ Outcome
You now have:
- Node.js + npm installed
- Fully configured TypeScript environment
- Auto-reload setup with nodemon
- Verified TypeScript execution (ts-node)
- Clean project structure ready for API development

Folder Structure:
ai-chat-api/
├── node_modules/
├── src/
│   └── index.ts
├── package.json
├── tsconfig.json
└── package-lock.json

───────────────────────────────
This completes Step 1 of Week 1 in your AI Integration Engineer Portfolio Roadmap.
